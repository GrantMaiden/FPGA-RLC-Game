--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=31 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_rma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode8042w[2..0]	: WIRE;
	w_anode8055w[3..0]	: WIRE;
	w_anode8072w[3..0]	: WIRE;
	w_anode8082w[3..0]	: WIRE;
	w_anode8092w[3..0]	: WIRE;
	w_anode8102w[3..0]	: WIRE;
	w_anode8112w[3..0]	: WIRE;
	w_anode8122w[3..0]	: WIRE;
	w_anode8132w[3..0]	: WIRE;
	w_anode8144w[2..0]	: WIRE;
	w_anode8153w[3..0]	: WIRE;
	w_anode8164w[3..0]	: WIRE;
	w_anode8174w[3..0]	: WIRE;
	w_anode8184w[3..0]	: WIRE;
	w_anode8194w[3..0]	: WIRE;
	w_anode8204w[3..0]	: WIRE;
	w_anode8214w[3..0]	: WIRE;
	w_anode8224w[3..0]	: WIRE;
	w_anode8235w[2..0]	: WIRE;
	w_anode8244w[3..0]	: WIRE;
	w_anode8255w[3..0]	: WIRE;
	w_anode8265w[3..0]	: WIRE;
	w_anode8275w[3..0]	: WIRE;
	w_anode8285w[3..0]	: WIRE;
	w_anode8295w[3..0]	: WIRE;
	w_anode8305w[3..0]	: WIRE;
	w_anode8315w[3..0]	: WIRE;
	w_anode8326w[2..0]	: WIRE;
	w_anode8335w[3..0]	: WIRE;
	w_anode8346w[3..0]	: WIRE;
	w_anode8356w[3..0]	: WIRE;
	w_anode8366w[3..0]	: WIRE;
	w_anode8376w[3..0]	: WIRE;
	w_anode8386w[3..0]	: WIRE;
	w_anode8396w[3..0]	: WIRE;
	w_anode8406w[3..0]	: WIRE;
	w_data8040w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode8406w[3..3], w_anode8396w[3..3], w_anode8386w[3..3], w_anode8376w[3..3], w_anode8366w[3..3], w_anode8356w[3..3], w_anode8346w[3..3], w_anode8335w[3..3]), ( w_anode8315w[3..3], w_anode8305w[3..3], w_anode8295w[3..3], w_anode8285w[3..3], w_anode8275w[3..3], w_anode8265w[3..3], w_anode8255w[3..3], w_anode8244w[3..3]), ( w_anode8224w[3..3], w_anode8214w[3..3], w_anode8204w[3..3], w_anode8194w[3..3], w_anode8184w[3..3], w_anode8174w[3..3], w_anode8164w[3..3], w_anode8153w[3..3]), ( w_anode8132w[3..3], w_anode8122w[3..3], w_anode8112w[3..3], w_anode8102w[3..3], w_anode8092w[3..3], w_anode8082w[3..3], w_anode8072w[3..3], w_anode8055w[3..3]));
	w_anode8042w[] = ( (w_anode8042w[1..1] & (! data_wire[4..4])), (w_anode8042w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8055w[] = ( (w_anode8055w[2..2] & (! w_data8040w[2..2])), (w_anode8055w[1..1] & (! w_data8040w[1..1])), (w_anode8055w[0..0] & (! w_data8040w[0..0])), w_anode8042w[2..2]);
	w_anode8072w[] = ( (w_anode8072w[2..2] & (! w_data8040w[2..2])), (w_anode8072w[1..1] & (! w_data8040w[1..1])), (w_anode8072w[0..0] & w_data8040w[0..0]), w_anode8042w[2..2]);
	w_anode8082w[] = ( (w_anode8082w[2..2] & (! w_data8040w[2..2])), (w_anode8082w[1..1] & w_data8040w[1..1]), (w_anode8082w[0..0] & (! w_data8040w[0..0])), w_anode8042w[2..2]);
	w_anode8092w[] = ( (w_anode8092w[2..2] & (! w_data8040w[2..2])), (w_anode8092w[1..1] & w_data8040w[1..1]), (w_anode8092w[0..0] & w_data8040w[0..0]), w_anode8042w[2..2]);
	w_anode8102w[] = ( (w_anode8102w[2..2] & w_data8040w[2..2]), (w_anode8102w[1..1] & (! w_data8040w[1..1])), (w_anode8102w[0..0] & (! w_data8040w[0..0])), w_anode8042w[2..2]);
	w_anode8112w[] = ( (w_anode8112w[2..2] & w_data8040w[2..2]), (w_anode8112w[1..1] & (! w_data8040w[1..1])), (w_anode8112w[0..0] & w_data8040w[0..0]), w_anode8042w[2..2]);
	w_anode8122w[] = ( (w_anode8122w[2..2] & w_data8040w[2..2]), (w_anode8122w[1..1] & w_data8040w[1..1]), (w_anode8122w[0..0] & (! w_data8040w[0..0])), w_anode8042w[2..2]);
	w_anode8132w[] = ( (w_anode8132w[2..2] & w_data8040w[2..2]), (w_anode8132w[1..1] & w_data8040w[1..1]), (w_anode8132w[0..0] & w_data8040w[0..0]), w_anode8042w[2..2]);
	w_anode8144w[] = ( (w_anode8144w[1..1] & (! data_wire[4..4])), (w_anode8144w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8153w[] = ( (w_anode8153w[2..2] & (! w_data8040w[2..2])), (w_anode8153w[1..1] & (! w_data8040w[1..1])), (w_anode8153w[0..0] & (! w_data8040w[0..0])), w_anode8144w[2..2]);
	w_anode8164w[] = ( (w_anode8164w[2..2] & (! w_data8040w[2..2])), (w_anode8164w[1..1] & (! w_data8040w[1..1])), (w_anode8164w[0..0] & w_data8040w[0..0]), w_anode8144w[2..2]);
	w_anode8174w[] = ( (w_anode8174w[2..2] & (! w_data8040w[2..2])), (w_anode8174w[1..1] & w_data8040w[1..1]), (w_anode8174w[0..0] & (! w_data8040w[0..0])), w_anode8144w[2..2]);
	w_anode8184w[] = ( (w_anode8184w[2..2] & (! w_data8040w[2..2])), (w_anode8184w[1..1] & w_data8040w[1..1]), (w_anode8184w[0..0] & w_data8040w[0..0]), w_anode8144w[2..2]);
	w_anode8194w[] = ( (w_anode8194w[2..2] & w_data8040w[2..2]), (w_anode8194w[1..1] & (! w_data8040w[1..1])), (w_anode8194w[0..0] & (! w_data8040w[0..0])), w_anode8144w[2..2]);
	w_anode8204w[] = ( (w_anode8204w[2..2] & w_data8040w[2..2]), (w_anode8204w[1..1] & (! w_data8040w[1..1])), (w_anode8204w[0..0] & w_data8040w[0..0]), w_anode8144w[2..2]);
	w_anode8214w[] = ( (w_anode8214w[2..2] & w_data8040w[2..2]), (w_anode8214w[1..1] & w_data8040w[1..1]), (w_anode8214w[0..0] & (! w_data8040w[0..0])), w_anode8144w[2..2]);
	w_anode8224w[] = ( (w_anode8224w[2..2] & w_data8040w[2..2]), (w_anode8224w[1..1] & w_data8040w[1..1]), (w_anode8224w[0..0] & w_data8040w[0..0]), w_anode8144w[2..2]);
	w_anode8235w[] = ( (w_anode8235w[1..1] & data_wire[4..4]), (w_anode8235w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8244w[] = ( (w_anode8244w[2..2] & (! w_data8040w[2..2])), (w_anode8244w[1..1] & (! w_data8040w[1..1])), (w_anode8244w[0..0] & (! w_data8040w[0..0])), w_anode8235w[2..2]);
	w_anode8255w[] = ( (w_anode8255w[2..2] & (! w_data8040w[2..2])), (w_anode8255w[1..1] & (! w_data8040w[1..1])), (w_anode8255w[0..0] & w_data8040w[0..0]), w_anode8235w[2..2]);
	w_anode8265w[] = ( (w_anode8265w[2..2] & (! w_data8040w[2..2])), (w_anode8265w[1..1] & w_data8040w[1..1]), (w_anode8265w[0..0] & (! w_data8040w[0..0])), w_anode8235w[2..2]);
	w_anode8275w[] = ( (w_anode8275w[2..2] & (! w_data8040w[2..2])), (w_anode8275w[1..1] & w_data8040w[1..1]), (w_anode8275w[0..0] & w_data8040w[0..0]), w_anode8235w[2..2]);
	w_anode8285w[] = ( (w_anode8285w[2..2] & w_data8040w[2..2]), (w_anode8285w[1..1] & (! w_data8040w[1..1])), (w_anode8285w[0..0] & (! w_data8040w[0..0])), w_anode8235w[2..2]);
	w_anode8295w[] = ( (w_anode8295w[2..2] & w_data8040w[2..2]), (w_anode8295w[1..1] & (! w_data8040w[1..1])), (w_anode8295w[0..0] & w_data8040w[0..0]), w_anode8235w[2..2]);
	w_anode8305w[] = ( (w_anode8305w[2..2] & w_data8040w[2..2]), (w_anode8305w[1..1] & w_data8040w[1..1]), (w_anode8305w[0..0] & (! w_data8040w[0..0])), w_anode8235w[2..2]);
	w_anode8315w[] = ( (w_anode8315w[2..2] & w_data8040w[2..2]), (w_anode8315w[1..1] & w_data8040w[1..1]), (w_anode8315w[0..0] & w_data8040w[0..0]), w_anode8235w[2..2]);
	w_anode8326w[] = ( (w_anode8326w[1..1] & data_wire[4..4]), (w_anode8326w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8335w[] = ( (w_anode8335w[2..2] & (! w_data8040w[2..2])), (w_anode8335w[1..1] & (! w_data8040w[1..1])), (w_anode8335w[0..0] & (! w_data8040w[0..0])), w_anode8326w[2..2]);
	w_anode8346w[] = ( (w_anode8346w[2..2] & (! w_data8040w[2..2])), (w_anode8346w[1..1] & (! w_data8040w[1..1])), (w_anode8346w[0..0] & w_data8040w[0..0]), w_anode8326w[2..2]);
	w_anode8356w[] = ( (w_anode8356w[2..2] & (! w_data8040w[2..2])), (w_anode8356w[1..1] & w_data8040w[1..1]), (w_anode8356w[0..0] & (! w_data8040w[0..0])), w_anode8326w[2..2]);
	w_anode8366w[] = ( (w_anode8366w[2..2] & (! w_data8040w[2..2])), (w_anode8366w[1..1] & w_data8040w[1..1]), (w_anode8366w[0..0] & w_data8040w[0..0]), w_anode8326w[2..2]);
	w_anode8376w[] = ( (w_anode8376w[2..2] & w_data8040w[2..2]), (w_anode8376w[1..1] & (! w_data8040w[1..1])), (w_anode8376w[0..0] & (! w_data8040w[0..0])), w_anode8326w[2..2]);
	w_anode8386w[] = ( (w_anode8386w[2..2] & w_data8040w[2..2]), (w_anode8386w[1..1] & (! w_data8040w[1..1])), (w_anode8386w[0..0] & w_data8040w[0..0]), w_anode8326w[2..2]);
	w_anode8396w[] = ( (w_anode8396w[2..2] & w_data8040w[2..2]), (w_anode8396w[1..1] & w_data8040w[1..1]), (w_anode8396w[0..0] & (! w_data8040w[0..0])), w_anode8326w[2..2]);
	w_anode8406w[] = ( (w_anode8406w[2..2] & w_data8040w[2..2]), (w_anode8406w[1..1] & w_data8040w[1..1]), (w_anode8406w[0..0] & w_data8040w[0..0]), w_anode8326w[2..2]);
	w_data8040w[2..0] = data_wire[2..0];
END;
--VALID FILE
